{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0421\\u0430\\u0439\\u0442 10.06.2021\\\\my-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //Обьекты с информацией о фотографиях\n  const [photos, setPhotos] = useState([]); //хранит в себе номер текущей страници\n\n  const [currentPage, setCurrentPage] = useState([]); //принимает true когда подгружаем данные\n\n  const [fetching, setFetching] = useState(true); // const [totalCount, setTotalCount] = useState(0);\n\n  useEffect(() => {\n    if (fetching) {\n      axios.get(` https://jsonplaceholder.typicode.com/photos?_limit=20&_page=${currentPage}`) //получаем результат запроса\n      .then(response => {\n        //из запроса приходят фотографии, обновляем соостояние и добавляем туда полученные фотографии\n        setPhotos([...photos, ...response.data]);\n        setCurrentPage(prevState => prevState + 1); // setTotalCount(response.headers['x-total-count']);\n      }).finally(() => setFetching(false));\n    }\n  }, [fetching]); //Внутри колбэка повесим слушатель 'scroll' на документ\n\n  useEffect(() => {\n    document.addEventListener('scroll', scrollHandler);\n    return function () {\n      // удаляем слушатель\n      document.removeEventListener('scroll', scrollHandler);\n    };\n  }, [fetching]); //Ф-я которая будет вызываться при скроле страници\n\n  const scrollHeight = e => {\n    if ( // e.target.documentElement.scrollHandler - общая высота страници с учётом скрола\n    // e.target.documentElement.scrollTop - текущее положение скрола от верха страници\n    // window.innerHandler - высота видимой области страници\n    e.target.documentElement.scrollHeight - (e.target.documentElement.scrollTop + window.innerHeight) < 100) {\n      setFetching(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: photos.map(photo => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"photo\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: [photo.id, \" \", photo.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: photo.thumbnailUrl,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, photo.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"17ECK9VMW/MefMde84ADTyTI5mg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Сайт 10.06.2021/my-app/src/App.js"],"names":["React","useState","useEffect","axios","App","photos","setPhotos","currentPage","setCurrentPage","fetching","setFetching","get","then","response","data","prevState","finally","document","addEventListener","scrollHandler","removeEventListener","scrollHeight","e","target","documentElement","scrollTop","window","innerHeight","map","photo","id","title","thumbnailUrl"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC,CAFa,CAGb;;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C,CAJa,CAKb;;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,IAAD,CAAxC,CANa,CAQd;;AAECC,EAAAA,SAAS,CAAC,MAAM;AACV,QAAIO,QAAJ,EAAc;AAChBN,MAAAA,KAAK,CACFQ,GADH,CAEI,gEAA+DJ,WAAY,EAF/E,EAGE;AAHF,OAIGK,IAJH,CAIQC,QAAQ,IAAI;AAChB;AACAP,QAAAA,SAAS,CAAE,CAAC,GAAGD,MAAJ,EAAY,GAAGQ,QAAQ,CAACC,IAAxB,CAAF,CAAT;AACAN,QAAAA,cAAc,CAAEO,SAAS,IAAIA,SAAS,GAAG,CAA3B,CAAd,CAHgB,CAIlB;AACC,OATH,EAUGC,OAVH,CAUW,MAAMN,WAAW,CAAC,KAAD,CAV5B;AAWD;AACF,GAdQ,EAcN,CAACD,QAAD,CAdM,CAAT,CAVa,CA0Bb;;AACAP,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,QAA1B,EAAoCC,aAApC;AAEA,WAAO,YAAY;AACjB;AACAF,MAAAA,QAAQ,CAACG,mBAAT,CAA6B,QAA7B,EAAuCD,aAAvC;AACD,KAHD;AAID,GAPQ,EAON,CAACV,QAAD,CAPM,CAAT,CA3Ba,CAmCb;;AACA,QAAMY,YAAY,GAAIC,CAAD,IAAO;AAC1B,SACE;AACA;AACA;AACAA,IAAAA,CAAC,CAACC,MAAF,CAASC,eAAT,CAAyBH,YAAzB,IACGC,CAAC,CAACC,MAAF,CAASC,eAAT,CAAyBC,SAAzB,GAAqCC,MAAM,CAACC,WAD/C,IAEE,GANJ,EAMY;AACVjB,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD;AACF,GAVD;;AAWA,sBACE;AAAK,IAAA,SAAS,EAAE,KAAhB;AAAA,cACKL,MAAM,CAACuB,GAAP,CAAYC,KAAD,iBACZ;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,mBACGA,KAAK,CAACC,EADT,OACcD,KAAK,CAACE,KADpB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,GAAG,EAAEF,KAAK,CAACG,YAAhB;AAA8B,QAAA,GAAG,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA,OAA4BH,KAAK,CAACC,EAAlC;AAAA;AAAA;AAAA;AAAA,YADC;AADL;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GA3DQ1B,G;;KAAAA,G;AA6DT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction App() {\n  //Обьекты с информацией о фотографиях\n  const [photos, setPhotos] = useState([]);\n  //хранит в себе номер текущей страници\n  const [currentPage, setCurrentPage] = useState([]);\n  //принимает true когда подгружаем данные\n  const [fetching, setFetching] = useState(true);\n\n // const [totalCount, setTotalCount] = useState(0);\n\n  useEffect(() => {\n        if (fetching) {\n      axios\n        .get(\n         ` https://jsonplaceholder.typicode.com/photos?_limit=20&_page=${currentPage}`)\n        //получаем результат запроса\n        .then(response => {\n          //из запроса приходят фотографии, обновляем соостояние и добавляем туда полученные фотографии\n          setPhotos( [...photos, ...response.data]);\n          setCurrentPage (prevState => prevState + 1);\n        // setTotalCount(response.headers['x-total-count']);\n        })\n        .finally(() => setFetching(false));\n    }\n  }, [fetching]);\n\n  //Внутри колбэка повесим слушатель 'scroll' на документ\n  useEffect(() => {\n    document.addEventListener('scroll', scrollHandler);\n\n    return function () {\n      // удаляем слушатель\n      document.removeEventListener('scroll', scrollHandler);\n    }\n  }, [fetching]);\n  //Ф-я которая будет вызываться при скроле страници\n  const scrollHeight = (e) => {\n    if (\n      // e.target.documentElement.scrollHandler - общая высота страници с учётом скрола\n      // e.target.documentElement.scrollTop - текущее положение скрола от верха страници\n      // window.innerHandler - высота видимой области страници\n      e.target.documentElement.scrollHeight -\n        (e.target.documentElement.scrollTop + window.innerHeight) <\n        100   ) {\n      setFetching(true);\n    }\n  };\n  return (\n    <div className={\"app\"}>\n        {photos.map((photo) => (\n        <div className=\"photo\" key={photo.id}>\n          <div className=\"title\">\n            {photo.id} {photo.title}\n          </div>\n          <img src={photo.thumbnailUrl} alt=\"\" />\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}